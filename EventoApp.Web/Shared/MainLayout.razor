@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudToggleIconButton @bind-Toggled="@_isOpen"
            Icon="@Icons.Material.Filled.Menu" 
            Color="Color.Inherit" 
            Title="Abrir Navegador" 
            Edge="Edge.Start" 
            ToggledIcon="@Icons.Material.Filled.MenuOpen" 
            ToggledColor="Color.Inherit" 
            ToggledTitle="Fechar Navegador" />
        <MudSpacer />
        <MudToggleIconButton @bind-Toggled="@_isDarkMode"
            Icon="@Icons.Material.Filled.DarkMode" 
            Color="Color.Inherit" 
            Title="Abrir Navegador" 
            Edge="Edge.Start" 
            ToggledIcon="@Icons.Material.Filled.LightMode" 
            ToggledColor="Color.Inherit" 
            ToggledTitle="Fechar Navegador" />
    </MudAppBar>
    <MudDrawer @bind-Open="_isOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">EventoApp</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _isOpen;
    bool _isDarkMode;

    MudTheme _theme = new();
    private MudThemeProvider _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isOpen = true;
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
    
}